{"ast":null,"code":"var _jsxFileName = \"/home/nero/public_html/post_app/src/components/app/app.js\";\nimport React from 'react';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\nimport PostList from '../post-list/post-list';\nimport PostAddForm from '../post-add-form/post-add-form';\nimport './app.css';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        label: 'Going learn React',\n        important: true,\n        id: 1\n      }, {\n        label: 'That is good',\n        important: false,\n        id: 2\n      }, {\n        label: 'I need a break..',\n        important: false,\n        id: 3\n      }, {\n        label: 'I am fine!!!',\n        important: false,\n        id: 4\n      }],\n      term: '',\n      filter: 'all'\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLiked = this.onToggleLiked.bind(this);\n    this.searchPost = this.searchPost.bind(this);\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.maxId = 5;\n  }\n\n  deleteItem(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  addItem(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.maxId++\n    };\n    this.setState(({\n      data\n    }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleImportant(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        important: !old.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleLiked(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        like: !old.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  searchPost(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.indexOf(term) > -1;\n    });\n  }\n\n  filtePost(items, filter) {\n    if (filter === 'like') {\n      return items.filter(item => item.like);\n    } else {\n      return items;\n    }\n  }\n\n  onUpdateSearch(term) {\n    this.setState({\n      term\n    });\n  }\n\n  render() {\n    const {\n      data,\n      term,\n      filter\n    } = this.state;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    const visiblePosts = this.filtePost(this.searchPost(data, term), filter);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppHeader, {\n      liked: liked,\n      allPosts: allPosts,\n      a: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-panel d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SearchPanel, {\n      onUpdateSearch: this.onUpdateSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(PostStatusFilter, {\n      filter: filter,\n      onFilterSelect: this.onFilterSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(PostList, {\n      posts: visiblePosts,\n      onDelete: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleLiked: this.onToggleLiked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(PostAddForm, {\n      onAdd: this.addItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/nero/public_html/post_app/src/components/app/app.js"],"names":["React","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","App","Component","constructor","props","state","data","label","important","id","term","filter","deleteItem","bind","addItem","onToggleImportant","onToggleLiked","searchPost","onUpdateSearch","maxId","setState","index","findIndex","elem","newArr","slice","body","newItem","old","like","items","length","item","indexOf","filtePost","render","liked","allPosts","visiblePosts","onFilterSelect"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport PostStatusFilter from '../post-status-filter/post-status-filter';\nimport PostList from '../post-list/post-list';\nimport PostAddForm from '../post-add-form/post-add-form';\n\nimport './app.css';\n\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [\n                { label: 'Going learn React', important: true, id: 1 },\n                { label: 'That is good', important: false, id: 2 },\n                { label: 'I need a break..', important: false, id: 3 },\n                { label: 'I am fine!!!', important: false, id: 4 },\n            ],\n            term: '',\n            filter: 'all',\n        }\n        this.deleteItem = this.deleteItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n        this.onToggleImportant = this.onToggleImportant.bind(this);\n        this.onToggleLiked = this.onToggleLiked.bind(this);\n        this.searchPost = this.searchPost.bind(this);\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n        this.maxId = 5;\n    }\n\n\n    deleteItem(id) {\n        this.setState(({ data }) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        })\n\n    }\n\n\n    addItem(body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.maxId++,\n        }\n        this.setState(({ data }) => {\n            const newArr = [...data, newItem];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToggleImportant(id) {\n        this.setState(({ data }) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = { ...old, important: !old.important };\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToggleLiked(id) {\n        this.setState(({ data }) => {\n            const index = data.findIndex(elem => elem.id === id);\n            const old = data[index];\n            const newItem = { ...old, like: !old.like };\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    searchPost(items, term) {\n        if (term.length === 0) {\n            return items;\n        }\n\n        return items.filter((item) => {\n            return item.label.indexOf(term) > -1;\n        });\n    }\n\n    filtePost(items, filter) {\n        if (filter === 'like') {\n            return items.filter(item => item.like);\n        } else {\n            return items;\n        }\n    }\n\n    onUpdateSearch(term) {\n        this.setState({ term });\n    }\n\n\n    \n    render() {\n        const { data, term, filter } = this.state;\n        const liked = data.filter(item => item.like).length;\n        const allPosts = data.length;\n\n        const visiblePosts = this.filtePost(this.searchPost(data, term), filter);\n        return (\n            <div className=\"app\">\n                <AppHeader\n                    liked={liked}\n                    allPosts={allPosts} a\n                />\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel\n                        onUpdateSearch={this.onUpdateSearch}\n                    />\n                    <PostStatusFilter\n                        filter={filter}\n                        onFilterSelect={this.onFilterSelect}\n                    />\n                </div>\n                <PostList\n                    posts={visiblePosts}\n                    onDelete={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleLiked={this.onToggleLiked}\n                />\n                <PostAddForm\n                    onAdd={this.addItem} />\n            </div>\n        )\n    }\n};"]},"metadata":{},"sourceType":"module"}